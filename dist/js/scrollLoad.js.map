{"version":3,"sources":["scrollLoad.js"],"names":["root","factory","define","amd","exports","_typeof","module","require","ScrollLoad","jQuery","window","$","elem","arguments","length","undefined","_classCallCheck","this","defaults","scrollUpTexts","scrollDownTexts","lazyLoadClass","iScrollOptions","scrollbars","probeType","shrinkScrollbars","s","controller","curPage","onScrollUpEnd","curUpPage","curDownPage","options","Date","getTime","i","prevUpdataTime","j","k","document","on","e","preventDefault","$wrapper","children","$header","$footer","addEventListener","setTimeout","$list","_createClass","key","value","prevTime","diff","parseInt","toLocaleString","replace","func","wait","context","args","result","timeout","previous","later","leading","apply","now","remaining","cls","callback","io","IntersectionObserver","trailing","querySelector","threshold","querySelectorAll","forEach","curVal","observe","createObserver","entry","target","getAttribute","src","url","each","offsetTop","Math","round","position","top","abs","scrollTop","height","attr","prop","_this","op","isScrollUp","innerHeight","ms","y","scrollTo","headHeight","refresh","footHeight","hide","clearTimeout","show","scrollDown","_this2","scrollUpStart","scrollUp","throttle","scrollingUp","lazyload","scrollUpEnd","$headLoadText","$headLoadState","stateText","getTimeDifference","text","addClass","_this3","end","removeClass","loading","timeout1","IScroll","utils","ease","quadratic","timeout2","_this4","scrollDownEnd","$footLoadText","intersectionRatio","offset","winHeight","wrapperHeight","timer","scrollingDown","scrollerHeight","onScrollDownEnd"],"mappings":"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","file":"scrollLoad.js","sourcesContent":[";(function (root, factory) {\r\n  if (typeof define === 'function' && define.amd) {\r\n    define([], factory);\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = factory(require('jquery'));\r\n  } else {\r\n    root.ScrollLoad = factory(root.jQuery);\r\n  }\r\n})(this ? this : window, function ($) {\r\n  \r\n  class ScrollLoad {\r\n    constructor(elem, options = {}) {\r\n      const s = this;\r\n      const defaults = {\r\n        isScrollUp: false, // 是否开启向上滚动\r\n        scrollUpTexts: ['下拉更新数据', '松开更新数据', '正在获取最新数据...', '已经是最新的了！'], // 向上滚动文字配置 [默认，滑屏触发，释放加载，全部加载完]\r\n        scrollDownTexts: ['上拉加载更多', '松开更新数据', '数据加载中...', '已经没有更多数据了！'], // 向下滚动文字配置 [默认，滑屏触发，释放加载，全部加载完]\r\n        isLazyLoad: false, // 是否开启图片懒加载\r\n        lazyLoadClass: '.lazyload', // 图片懒加载选择器，需开启isLazyLoad\r\n        iScrollOptions: {\r\n          scrollbars: true, // 是否显示滚动条\r\n          probeType: 1, // 滚动频率最大值为 3\r\n          shrinkScrollbars: 'scale', // 收缩滚动条，clip、scale，参数作用可查看 http://wiki.jikexueyuan.com/project/iscroll-5/scrollers.html\r\n          click: true, // 是否禁用点击事件\r\n          taps: true // 是否禁用tap事件\r\n        },\r\n        /**\r\n         * 向下滚动结束后回调\r\n         * @param  {[object]} controller [控制器] controller.loading() 继续加载，controller.end() 结束加载\r\n         * @param  {[number]} curPage [当前分页]\r\n         */\r\n        onScrollDownEnd: function(controller, curPage) {\r\n          \r\n        },\r\n        /**\r\n         * 向上滚动结束后回调\r\n         * @param  {[object]} controller [控制器] controller.loading() 继续加载，controller.end() 结束加载\r\n         * @param  {[number]} curPage [当前分页]\r\n         */\r\n        onScrollUpEnd: function (controller, curPage) {\r\n          \r\n        }\r\n      };\r\n      \r\n      s.elem = elem;\r\n      s.curUpPage = 1; // 上翻当前页\r\n      s.curDownPage = 1; // 下翻当前页\r\n      s.options = options;\r\n      s.prevUpdataTime = new Date().getTime(); // 上一次更新时间\r\n\r\n      // 如果参数没有设置，则使用默认值\r\n      for (let i in defaults) {\r\n        if (typeof s.options[i] === 'undefined') {\r\n          s.options[i] = defaults[i];\r\n        } else if (typeof s.options[i] === 'object') {\r\n          for (let j in defaults[i]) {\r\n            if (typeof s.options[i][j] === 'undefined') {\r\n              s.options[i][j] = defaults[i][j];\r\n            } else if (typeof s.options[i][j] === 'object') {\r\n              for (let k in defaults[i][j]) {\r\n                if (typeof s.options[i][j][k] === 'undefined') {\r\n                  s.options[i][j][k] = defaults[i][j][k];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // 阻止touchmove默认事件\r\n      $(document).on('touchmove', function (e) {\r\n        e.preventDefault();\r\n      });\r\n\r\n      let $wrapper = $(s.elem).children('.scroller');\r\n      s.$header = $wrapper.children('.scroll-header');\r\n      s.$footer = $wrapper.children('.scroll-footer');\r\n      s.$list = $wrapper.children('ul');\r\n\r\n      // 文档加载完成之后初始化\r\n      window.addEventListener('load', function () {\r\n        setTimeout(() => {\r\n          s.ms = new IScroll(s.elem, s.options.iScrollOptions);\r\n          s.init();\r\n        }, 200);\r\n      });\r\n      \r\n    }\r\n    /**\r\n     * get当前时间与上次更新时间间隔\r\n     * @param  {[number]} prevTime [上一次更新时间(毫秒)]\r\n     * @return {[string]}          [当前时间与上次更新时间的间隔]\r\n     */\r\n    getTimeDifference(prevTime) {\r\n\r\n      const nowTime = new Date().getTime();\r\n      let diff = (nowTime - prevTime) / 1000;\r\n\r\n      if(diff >= 0 && diff < 60) return '刚刚更新';\r\n      else if(diff >= 60 && diff < 3600) return parseInt(diff / 60) + '分钟前';\r\n      else if(diff >= 3600 && diff < 86400) return parseInt(diff / 3600) + '小时前';\r\n      else if(diff >= 86400 && diff < 345600) return parseInt(diff / 86400) + '天前';\r\n      else return new Date(prevTime).toLocaleString().replace(/:\\d{1,2}$/, ' ');\r\n    }\r\n\r\n    /**\r\n   * [在固定时间内函数多次触发，只执行一次]\r\n   * @param  {[function]} func  [要执行的方法]\r\n   * @param  {[number]} wait    [等待时间]\r\n   * @param  {[object]} options [控制器]\r\n   * @return {[function]}       [返回值]\r\n   */\r\n    throttle(func, wait, options = {}) {\r\n      let context, args, result;\r\n      let timeout = null;\r\n      let previous = 0;\r\n\r\n      // 延时执行函数\r\n      const later = function () {\r\n        // 如果及时调用被关闭，则设置previous为0\r\n        previous = options.leading === false ? 0 : new Date().getTime();\r\n        timeout = null;\r\n        result = func.apply(context, args);\r\n        if (!timeout) context = args = null;\r\n      };\r\n      return function () {\r\n        const now = new Date().getTime();\r\n        if (!previous && options.leading === false) previous = now;\r\n        let remaining = wait - (now - previous);\r\n\r\n        context = this;\r\n        args = arguments;\r\n        if (remaining <= 0 || remaining > wait) {\r\n          if (timeout) {\r\n            clearTimeout(timeout);\r\n            timeout = null;\r\n          }\r\n          previous = now;\r\n          result = func.apply(context, args);\r\n\r\n          if (!timeout) context = args = null;\r\n        } else if (!timeout && options.trailing !== false) {\r\n          timeout = setTimeout(later, remaining);\r\n        }\r\n        return result;\r\n      };\r\n    }\r\n    /**\r\n     * 创建交叉观察器，判断图片是否进入视窗\r\n     * @param {string} cls class类名\r\n     * @param {callback} callback 触发后回调\r\n     */\r\n    createObserver(cls, callback) {\r\n      \r\n      const io = new IntersectionObserver((entries) => {\r\n        entries.forEach((curVal) => {\r\n          if (typeof callback === 'function') {\r\n            callback(curVal);\r\n          }\r\n        });\r\n      }, {\r\n          root: document.querySelector(this.elem),\r\n          threshold: [0, 1]\r\n        });\r\n\r\n      document.querySelectorAll(cls).forEach((curVal) => {\r\n        io.observe(curVal);\r\n      });\r\n    }\r\n    // 添加图片懒加载\r\n    lazyload(scrollTop) {\r\n      \r\n      if (!this.options.isLazyLoad) return false;\r\n      let cls = this.options.lazyLoadClass;\r\n\r\n      if (typeof window.IntersectionObserver === 'function') {\r\n        this.createObserver(cls, (entry) => {\r\n          if (entry.intersectionRatio > 0) {\r\n            let url = entry.target.getAttribute('data-src');\r\n            entry.target.src = url;\r\n          }\r\n        });\r\n      } else {\r\n        $(cls).each(function () {\r\n          let offsetTop = Math.round($(this).position().top);\r\n\r\n          if (Math.abs(scrollTop) + $(window).height() >= offsetTop) {\r\n            let url = $(this).attr('data-src');\r\n            $(this).prop('src', url);\r\n          }\r\n        });\r\n      }\r\n      \r\n    }\r\n    // 初始化\r\n    init() {\r\n\r\n      let op = this.options;\r\n      let headHeight = op.isScrollUp ? Math.round(this.$header.innerHeight()) : 0;\r\n      let footHeight = Math.round(this.$footer.innerHeight());\r\n      let diff = footHeight + headHeight; // 头部和底部的高度\r\n   \r\n      this.lazyload(this.ms.y);\r\n\r\n      // 如果列表的高度大于可视内容区域高度则显示头部和底部\r\n      if (this.ms.scroller.clientHeight > this.ms.wrapperHeight) {\r\n\r\n        if (!op.isScrollUp) {\r\n          this.$header.hide();\r\n          this.ms.scrollTo(0, 0);\r\n          const timeout = setTimeout(() => {\r\n            this.ms.refresh();\r\n            if (timeout) clearTimeout(timeout);\r\n          }, 0);\r\n          \r\n        } else {\r\n          this.ms.scrollTo(0, -headHeight);\r\n          const timeout = setTimeout(() => {\r\n            this.ms.refresh();\r\n            if (timeout) clearTimeout(timeout);\r\n          }, 0);\r\n          this.$header.show();\r\n          this.scrollUp();        \r\n        }\r\n\r\n        this.$footer.show();\r\n        this.scrollDown();\r\n\r\n      } else {\r\n        this.$header.hide();\r\n        this.$footer.hide();\r\n        this.ms.scrollTo(0, 0);\r\n        const timeout = setTimeout(() => {\r\n          this.ms.refresh();\r\n          if (timeout) clearTimeout(timeout);\r\n        }, 0);\r\n      }\r\n    }   \r\n    // 向上滚动触发，包括开始滚动、正在滚动、滚动结束三个步骤\r\n    scrollUp() {\r\n      this.ms.on('scrollStart', () => {\r\n        this.scrollUpStart();\r\n      });\r\n      this.ms.on('scroll', this.throttle(() => {\r\n        this.scrollingUp();\r\n        this.lazyload(this.ms.y);\r\n      }, 300, {\r\n        leading: false\r\n      }));\r\n      this.ms.on('scrollEnd', this.throttle(() => {\r\n        this.scrollUpEnd();\r\n      }, 500, {\r\n        leading: false\r\n      }));\r\n    }\r\n    // 开始向上滚动时触发\r\n    scrollUpStart() {\r\n      let $headLoadText = this.$header.children('.load-text');\r\n      let $headLoadState = this.$header.children('.load-time').children('.state');\r\n      let stateText = this.getTimeDifference(this.prevUpdataTime);\r\n\r\n      $headLoadState.text(stateText);\r\n      $headLoadText.prop('class', 'load-text');\r\n      $headLoadText.children('.text').text(this.options.scrollUpTexts[0]);\r\n    }\r\n    // 正在拖拽向上滚动未释放时触发\r\n    scrollingUp() {\r\n      let offsetTop = this.ms.y;\r\n      let $headLoadText = this.$header.children('.load-text');\r\n\r\n      if (offsetTop > 0) {\r\n        $headLoadText.addClass('ready');\r\n        $headLoadText.children('.text').text(this.options.scrollUpTexts[1]);\r\n      }\r\n    }\r\n    // 向上滚动结束后触发\r\n    scrollUpEnd() {\r\n      let $headLoadText = this.$header.children('.load-text');\r\n      let headHeight = this.$header.innerHeight();\r\n      let offsetTop = this.ms.y;\r\n      let op = this.options;\r\n      let s = this;\r\n      // 初始化控制器\r\n      const controller = {\r\n        // 加载至尾页时，结束当前加载列表数据\r\n        end: function() {\r\n          const timeout = setTimeout(() => {\r\n            $headLoadText.removeClass('ready').addClass('finish');\r\n            $headLoadText.children('.text').text(op.scrollUpTexts[3]);\r\n            clearTimeout(timeout);\r\n          }, 300);\r\n        },\r\n        // 未达到尾页，继续加载列表数据\r\n        loading: function() {\r\n          const timeout = setTimeout(() => {\r\n            s.ms.refresh();\r\n            s.lazyload(s.ms.y);\r\n            clearTimeout(timeout);\r\n          }, 0);\r\n        }\r\n      };\r\n\r\n      if (offsetTop === 0) {\r\n        $headLoadText.removeClass('ready').addClass('loading');\r\n        $headLoadText.children('.text').text(op.scrollUpTexts[2]);\r\n        this.curUpPage++;\r\n      \r\n        // 加载中\r\n        const timeout1 = setTimeout(() => {\r\n          $headLoadText.removeClass('loading');\r\n          $headLoadText.children('.text').text(op.scrollUpTexts[0]);\r\n          clearTimeout(timeout1);\r\n        }, 300);\r\n        // 加载完毕\r\n        const timeout2 = setTimeout(() => {\r\n          this.ms.scrollTo(0, -headHeight, 300, IScroll.utils.ease.quadratic);\r\n\r\n          if (this.prevUpdataTime < new Date().getTime()) {\r\n            this.prevUpdataTime = new Date().getTime(); // 重置更新时间\r\n          }\r\n          clearTimeout(timeout2);\r\n        }, 500);\r\n\r\n        // 加载完毕触发回调\r\n        op.onScrollUpEnd(controller, this.curUpPage)\r\n        \r\n      }\r\n    }\r\n    // 向下滚动触发，包括正在滚动、滚动结束两个步骤\r\n    scrollDown() {\r\n      this.ms.on('scroll', this.throttle(() => {\r\n        this.scrollingDown();\r\n        this.lazyload(this.ms.y);\r\n      }, 500, {\r\n        leading: false\r\n      }));\r\n      this.ms.on('scrollEnd', this.throttle(() => {\r\n        this.scrollDownEnd();\r\n      }, 500, {\r\n        leading: false\r\n      }));\r\n    }\r\n    // 正在拖拽向下滚动未释放时触发\r\n    scrollingDown() {\r\n      let $footLoadText = this.$footer.children('.load-text');\r\n      let op = this.options;\r\n\r\n      if (typeof window.IntersectionObserver === 'function') {\r\n        \r\n        this.createObserver('.scroll-footer', (entry) => {\r\n          if (entry.intersectionRatio > 0) {\r\n            $footLoadText.prop('class', 'load-text');\r\n            $footLoadText.children('.text').text(op.scrollDownTexts[0]);\r\n          }\r\n          if (entry.intersectionRatio >= 1) {\r\n            $footLoadText.addClass('ready');\r\n            $footLoadText.children('.text').text(op.scrollDownTexts[1]);\r\n          }\r\n        });\r\n      } else {\r\n        let offsetTop = this.$footer.offset().top;\r\n        let footHeight = this.$footer.innerHeight();\r\n        let scrollTop = Math.abs(this.ms.y);\r\n        let winHeight = this.ms.wrapperHeight;\r\n        \r\n        if (scrollTop + winHeight >= offsetTop) {\r\n          $footLoadText.prop('class', 'load-text');\r\n          $footLoadText.children('.text').text(op.scrollDownTexts[0]);\r\n        }\r\n\r\n        if (scrollTop + winHeight >= offsetTop + footHeight) {\r\n          const timer = setTimeout(() => {\r\n            $footLoadText.addClass('ready');\r\n            $footLoadText.children('.text').text(op.scrollDownTexts[1]);\r\n            clearTimeout(timer);\r\n          }, 0);\r\n        }\r\n      }\r\n    }\r\n    // 向下滚动结束后触发\r\n    scrollDownEnd() {\r\n\r\n      let $footLoadText = this.$footer.children('.load-text');\r\n      let offsetTop = this.ms.y;\r\n      let op = this.options;\r\n      let s = this;\r\n\r\n      // 初始化控制器\r\n      const controller = {\r\n        // 加载至尾页时，结束当前加载列表数据\r\n        end: function() {\r\n          const timeout = setTimeout(() => {\r\n            $footLoadText.removeClass('ready').addClass('finish');\r\n            $footLoadText.children('.text').text(op.scrollDownTexts[3]);\r\n            s.scrollDown = null;\r\n            clearTimeout(timeout);\r\n          }, 300);\r\n        },\r\n        // 未达到尾页，继续加载列表数据\r\n        loading: function() {\r\n          const timeout = setTimeout(() => {\r\n            s.ms.refresh();\r\n            s.lazyload(s.ms.y);\r\n            clearTimeout(timeout);\r\n          }, 0);\r\n        }\r\n      };\r\n\r\n      if (offsetTop <= this.ms.wrapperHeight - this.ms.scrollerHeight) {\r\n        \r\n        // 准备加载\r\n        $footLoadText.removeClass('ready').addClass('loading');\r\n        $footLoadText.children('.text').text(op.scrollDownTexts[2]);\r\n        this.curDownPage++;\r\n\r\n        // 加载中\r\n        const timeout1 = setTimeout(() => {\r\n          $footLoadText.removeClass('loading');\r\n          $footLoadText.children('.text').text(op.scrollDownTexts[0]);\r\n          clearTimeout(timeout1);\r\n        }, 300);\r\n\r\n        // 加载完毕后回调\r\n        op.onScrollDownEnd(controller, this.curDownPage);\r\n      }\r\n      \r\n    }\r\n  }\r\n  return ScrollLoad;\r\n});"]}